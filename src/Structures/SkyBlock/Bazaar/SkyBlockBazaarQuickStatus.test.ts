import SkyBlockBazaarQuickStatus from './SkyBlockBazaarQuickStatus.js';
import { expect, expectTypeOf, test } from 'vitest';
import type { BazaarProduct } from '../../../Types/SkyBlock.js';

test('SkyBlockBazaarQuickStatus', () => {
  const data = new SkyBlockBazaarQuickStatus({ stats: 'meow' });
  expect(data).toBeDefined();
  expect(data).toBeInstanceOf(SkyBlockBazaarQuickStatus);
  expectTypeOf(data).toEqualTypeOf<SkyBlockBazaarQuickStatus>();
  expect(data.productId).toBeDefined();
  expectTypeOf(data.productId).toEqualTypeOf<BazaarProduct | 'UNKNOWN'>();
  expect(data.sellPrice).toBeDefined();
  expectTypeOf(data.sellPrice).toEqualTypeOf<number>();
  expect(data.sellVolume).toBeDefined();
  expectTypeOf(data.sellVolume).toEqualTypeOf<number>();
  expect(data.sellMovingWeek).toBeDefined();
  expectTypeOf(data.sellMovingWeek).toEqualTypeOf<number>();
  expect(data.sellOrders).toBeDefined();
  expectTypeOf(data.sellOrders).toEqualTypeOf<number>();
  expect(data.buyPrice).toBeDefined();
  expectTypeOf(data.buyPrice).toEqualTypeOf<number>();
  expect(data.buyVolume).toBeDefined();
  expectTypeOf(data.buyVolume).toEqualTypeOf<number>();
  expect(data.buyMovingWeek).toBeDefined();
  expectTypeOf(data.buyMovingWeek).toEqualTypeOf<number>();
  expect(data.buyOrders).toBeDefined();
  expectTypeOf(data.buyOrders).toEqualTypeOf<number>();
  expect(data.toString).toBeDefined();
  expectTypeOf(data.toString).toEqualTypeOf<() => BazaarProduct | 'UNKNOWN'>();
  expect(data.toString()).toBeDefined();
  expectTypeOf(data.toString()).toEqualTypeOf<BazaarProduct | 'UNKNOWN'>();
});

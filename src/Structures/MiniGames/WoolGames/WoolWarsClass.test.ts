import WoolWarsClass from './WoolWarsClass.js';
import { expect, expectTypeOf, test } from 'vitest';

test('WoolWarsClass', () => {
  const data = new WoolWarsClass({ stats: 'meow' }, 'ARCHER');
  expect(data).toBeDefined();
  expect(data).toBeInstanceOf(WoolWarsClass);
  expectTypeOf(data).toEqualTypeOf<WoolWarsClass>();
  expect(data.wins).toBeDefined();
  expect(data.wins).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.wins).toEqualTypeOf<number>();
  expect(data.kills).toBeDefined();
  expect(data.kills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.kills).toEqualTypeOf<number>();
  expect(data.assists).toBeDefined();
  expect(data.assists).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.assists).toEqualTypeOf<number>();
  expect(data.deaths).toBeDefined();
  expect(data.deaths).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.deaths).toEqualTypeOf<number>();
  expect(data.KDRatio).toBeDefined();
  expect(data.KDRatio).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.KDRatio).toEqualTypeOf<number>();
  expect(data.gamesPlayed).toBeDefined();
  expect(data.gamesPlayed).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.gamesPlayed).toEqualTypeOf<number>();
  expect(data.woolsPlaced).toBeDefined();
  expect(data.woolsPlaced).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.woolsPlaced).toEqualTypeOf<number>();
  expect(data.blocksBroken).toBeDefined();
  expect(data.blocksBroken).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.blocksBroken).toEqualTypeOf<number>();
  expect(data.placeBreakRatio).toBeDefined();
  expect(data.placeBreakRatio).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.placeBreakRatio).toEqualTypeOf<number>();
  expect(data.powerUps).toBeDefined();
  expect(data.powerUps).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.powerUps).toEqualTypeOf<number>();
});

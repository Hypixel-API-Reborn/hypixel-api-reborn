import SkyBlockMemberPlayerStats from './SkyBlockMemberPlayerStats.js';
import { expect, expectTypeOf, test } from 'vitest';
import type SkyBlockMemberPlayerStatsAuctions from './SkyBlockMemberPlayerStatsAuctions.js';
import type SkyBlockMemberPlayerStatsCandy from './SkyBlockMemberPlayerStatsCandy.js';
import type SkyBlockMemberPlayerStatsEndIsland from './SkyBlockMemberPlayerStatsEndIsland.js';
import type SkyBlockMemberPlayerStatsFishing from './SkyBlockMemberPlayerStatsFishing.js';
import type SkyBlockMemberPlayerStatsGifts from './SkyBlockMemberPlayerStatsGifts.js';
import type SkyBlockMemberPlayerStatsMythos from './SkyBlockMemberPlayerStatsMythos.js';
import type SkyBlockMemberPlayerStatsWinter from './SkyBlockMemberPlayerStatsWinter.js';

test('SkyBlockMemberPlayerStats', () => {
  const data = new SkyBlockMemberPlayerStats({ stats: 'meow' });
  expect(data).toBeDefined();
  expect(data).toBeInstanceOf(SkyBlockMemberPlayerStats);
  expectTypeOf(data).toEqualTypeOf<SkyBlockMemberPlayerStats>();
  expect(data.fishing).toBeDefined();
  expectTypeOf(data.fishing).toEqualTypeOf<SkyBlockMemberPlayerStatsFishing>();
  expect(data.glowingMushroomsBroken).toBeDefined();
  expectTypeOf(data.glowingMushroomsBroken).toEqualTypeOf<number>();
  expect(data.highestDamage).toBeDefined();
  expectTypeOf(data.highestDamage).toEqualTypeOf<number>();
  expect(data.highestCriticalDamage).toBeDefined();
  expectTypeOf(data.highestCriticalDamage).toEqualTypeOf<number>();
  expect(data.kills).toBeDefined();
  expectTypeOf(data.kills).toEqualTypeOf<Record<string, number>>();
  expect(data.deaths).toBeDefined();
  expectTypeOf(data.deaths).toEqualTypeOf<Record<string, number>>();
  expect(data.auctions).toBeDefined();
  expectTypeOf(data.auctions).toEqualTypeOf<SkyBlockMemberPlayerStatsAuctions>();
  expect(data.candy).toBeDefined();
  expectTypeOf(data.candy).toEqualTypeOf<SkyBlockMemberPlayerStatsCandy>();
  expect(data.gifts).toBeDefined();
  expectTypeOf(data.gifts).toEqualTypeOf<SkyBlockMemberPlayerStatsGifts>();
  expect(data.mythos).toBeDefined();
  expectTypeOf(data.mythos).toEqualTypeOf<SkyBlockMemberPlayerStatsMythos>();
  expect(data.winter).toBeDefined();
  expectTypeOf(data.winter).toEqualTypeOf<SkyBlockMemberPlayerStatsWinter>();
  expect(data.endIsland).toBeDefined();
  expectTypeOf(data.endIsland).toEqualTypeOf<SkyBlockMemberPlayerStatsEndIsland>();
  expect(data.races).toBeDefined();
  expectTypeOf(data.races).toEqualTypeOf<Record<string, number | Record<string, number>>>();
});

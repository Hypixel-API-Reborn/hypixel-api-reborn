import SkyBlockMemberDungeonsFloor from './SkyBlockMemberDungeonsFloor.js';
import SkyBlockMemberDungeonsMode from './SkyBlockMemberDungeonsMode.js';
import { expect, expectTypeOf, test } from 'vitest';

test('SkyBlockMemberDungeonsMode', () => {
  const data = new SkyBlockMemberDungeonsMode({ stats: 'meow' }, 'catacombs');
  expect(data).toBeDefined();
  expect(data).toBeInstanceOf(SkyBlockMemberDungeonsMode);
  expectTypeOf(data).toEqualTypeOf<SkyBlockMemberDungeonsMode>();
  expect(data.highestFloorCompleted).toBeDefined();
  expectTypeOf(data.highestFloorCompleted).toEqualTypeOf<number>();
  expect(data.floor0).toBeDefined();
  expectTypeOf(data.floor0).toEqualTypeOf<SkyBlockMemberDungeonsFloor | null>();
  expect(data.floor1).toBeDefined();
  expectTypeOf(data.floor1).toEqualTypeOf<SkyBlockMemberDungeonsFloor>();
  expect(data.floor2).toBeDefined();
  expectTypeOf(data.floor2).toEqualTypeOf<SkyBlockMemberDungeonsFloor>();
  expect(data.floor3).toBeDefined();
  expectTypeOf(data.floor3).toEqualTypeOf<SkyBlockMemberDungeonsFloor>();
  expect(data.floor4).toBeDefined();
  expectTypeOf(data.floor4).toEqualTypeOf<SkyBlockMemberDungeonsFloor>();
  expect(data.floor5).toBeDefined();
  expectTypeOf(data.floor5).toEqualTypeOf<SkyBlockMemberDungeonsFloor>();
  expect(data.floor6).toBeDefined();
  expectTypeOf(data.floor6).toEqualTypeOf<SkyBlockMemberDungeonsFloor>();
  expect(data.floor7).toBeDefined();
  expectTypeOf(data.floor7).toEqualTypeOf<SkyBlockMemberDungeonsFloor>();
  expect(data.toString).toBeDefined();
  expectTypeOf(data.toString).toEqualTypeOf<() => number>();
  expect(data.toString()).toBeDefined();
  expect(data.toString()).toEqual(data.highestFloorCompleted);
  expectTypeOf(data.toString()).toEqualTypeOf<number>();
});

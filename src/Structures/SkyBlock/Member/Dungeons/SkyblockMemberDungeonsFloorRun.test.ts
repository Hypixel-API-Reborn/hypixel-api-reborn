import SkyblockMemberDungeonsFloorRun from './SkyblockMemberDungeonsFloorRun.js';
import { expect, expectTypeOf, test } from 'vitest';
import type { DungeonClass } from '../../../../Types/Skyblock.js';
import type { UUID } from '../../../../Types/Global.js';

test('SkyblockMemberDungeonsFloorRun', () => {
  const data = new SkyblockMemberDungeonsFloorRun({ stats: 'meow' });
  expect(data).toBeDefined();
  expect(data).toBeInstanceOf(SkyblockMemberDungeonsFloorRun);
  expectTypeOf(data).toEqualTypeOf<SkyblockMemberDungeonsFloorRun>();
  expect(data.timestamp).toBeDefined();
  expectTypeOf(data.timestamp).toEqualTypeOf<number>();
  expect(data.explorationScore).toBeDefined();
  expectTypeOf(data.explorationScore).toEqualTypeOf<number>();
  expect(data.speedScore).toBeDefined();
  expectTypeOf(data.speedScore).toEqualTypeOf<number>();
  expect(data.skillScore).toBeDefined();
  expectTypeOf(data.skillScore).toEqualTypeOf<number>();
  expect(data.bonusScore).toBeDefined();
  expectTypeOf(data.bonusScore).toEqualTypeOf<number>();
  expect(data.score).toBeDefined();
  expectTypeOf(data.score).toEqualTypeOf<number>();
  expect(data.selectedClass).toBeDefined();
  expectTypeOf(data.selectedClass).toEqualTypeOf<DungeonClass>();
  expect(data.teammates).toBeDefined();
  expectTypeOf(data.teammates).toEqualTypeOf<UUID[]>();
  expect(data.elapsedTime).toBeDefined();
  expectTypeOf(data.elapsedTime).toEqualTypeOf<number>();
  expect(data.damageDealt).toBeDefined();
  expectTypeOf(data.damageDealt).toEqualTypeOf<number>();
  expect(data.deaths).toBeDefined();
  expectTypeOf(data.deaths).toEqualTypeOf<number>();
  expect(data.mobsKilled).toBeDefined();
  expectTypeOf(data.mobsKilled).toEqualTypeOf<number>();
  expect(data.secretsFound).toBeDefined();
  expectTypeOf(data.secretsFound).toEqualTypeOf<number>();
  expect(data.damageMitigated).toBeDefined();
  expectTypeOf(data.damageMitigated).toEqualTypeOf<number>();
  expect(data.allyHealing).toBeDefined();
  expectTypeOf(data.allyHealing).toEqualTypeOf<number>();
  expect(data.toString).toBeDefined();
  expectTypeOf(data.toString).toEqualTypeOf<() => number>();
  expect(data.toString()).toBeDefined();
  expect(data.toString()).toEqual(data.score);
  expectTypeOf(data.toString()).toEqualTypeOf<number>();
});

import SkyblockMemberAccessoryBagTuning from './SkyblockMemberAccessoryBagTuning.js';
import SkyblockMemberAccessoryBagTuningSlot from './SkyblockMemberAccessoryBagTuningSlot.js';
import { expect, expectTypeOf, test } from 'vitest';

test('SkyblockMemberAccessoryBagTuning', () => {
  const data = new SkyblockMemberAccessoryBagTuning({ stats: 'meow' });
  expect(data).toBeDefined();
  expect(data).toBeInstanceOf(SkyblockMemberAccessoryBagTuning);
  expectTypeOf(data).toEqualTypeOf<SkyblockMemberAccessoryBagTuning>();
  expect(data.highestUnlockedSlot).toBeDefined();
  expectTypeOf(data.highestUnlockedSlot).toEqualTypeOf<number>();
  expect(data.slot1).toBeDefined();
  expectTypeOf(data.slot1).toEqualTypeOf<SkyblockMemberAccessoryBagTuningSlot>();
  expect(data.slot2).toBeDefined();
  expectTypeOf(data.slot2).toEqualTypeOf<SkyblockMemberAccessoryBagTuningSlot>();
  expect(data.slot3).toBeDefined();
  expectTypeOf(data.slot3).toEqualTypeOf<SkyblockMemberAccessoryBagTuningSlot>();
  expect(data.slot4).toBeDefined();
  expectTypeOf(data.slot4).toEqualTypeOf<SkyblockMemberAccessoryBagTuningSlot>();
  expect(data.slot5).toBeDefined();
  expectTypeOf(data.slot5).toEqualTypeOf<SkyblockMemberAccessoryBagTuningSlot>();
  expect(data.slot6).toBeDefined();
  expectTypeOf(data.slot6).toEqualTypeOf<SkyblockMemberAccessoryBagTuningSlot>();
  expect(data.slot7).toBeDefined();
  expectTypeOf(data.slot7).toEqualTypeOf<SkyblockMemberAccessoryBagTuningSlot>();
  expect(data.slot8).toBeDefined();
  expectTypeOf(data.slot8).toEqualTypeOf<SkyblockMemberAccessoryBagTuningSlot>();
  expect(data.toString).toBeDefined();
  expectTypeOf(data.toString).toEqualTypeOf<() => number>();
  expect(data.toString()).toBeDefined();
  expect(data.toString()).toEqual(data.highestUnlockedSlot);
  expectTypeOf(data.toString()).toEqualTypeOf<number>();
});

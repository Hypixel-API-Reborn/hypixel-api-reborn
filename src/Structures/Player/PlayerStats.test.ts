import Arcade from '../MiniGames/Arcade/Arcade.js';
import ArenaBrawl from '../MiniGames/ArenaBrawl/ArenaBrawl.js';
import BedWars from '../MiniGames/BedWars/BedWars.js';
import BlitzSurvivalGames from '../MiniGames/BlitzSurvivalGames/BlitzSurvivalGames.js';
import BuildBattle from '../MiniGames/BuildBattle/BuildBattle.js';
import CopsAndCrims from '../MiniGames/CopsAndCrims/CopsAndCrims.js';
import Duels from '../MiniGames/Duels/Duels.js';
import MegaWalls from '../MiniGames/MegaWalls/MegaWalls.js';
import MurderMystery from '../MiniGames/MurderMystery/MurderMystery.js';
import Paintball from '../MiniGames/Paintball.js';
import Pit from '../MiniGames/Pit/Pit.js';
import PlayerStats from './PlayerStats.js';
import Quakecraft from '../MiniGames/Quakecraft/Quakecraft.js';
import SkyWars from '../MiniGames/SkyWars/SkyWars.js';
import SmashHeroes from '../MiniGames/SmashHeroes/SmashHeroes.js';
import SpeedUHC from '../MiniGames/SpeedUHC/SpeedUHC.js';
import TNTGames from '../MiniGames/TNTGames/TNTGames.js';
import TurboKartRacers from '../MiniGames/TurboKartRacers/TurboKartRacers.js';
import UHC from '../MiniGames/UHC/UHC.js';
import VampireZ from '../MiniGames/VampireZ/VampireZ.js';
import Walls from '../MiniGames/Walls.js';
import Warlords from '../MiniGames/Warlords/Warlords.js';
import WoolGames from '../MiniGames/WoolGames/WoolGames.js';
import { expect, expectTypeOf, test } from 'vitest';

test('PlayerStats', () => {
  const data = new PlayerStats({ stats: 'meow' });
  expect(data).toBeDefined();
  expect(data).toBeInstanceOf(PlayerStats);
  expectTypeOf(data).toEqualTypeOf<PlayerStats>();
  expect(data.Arcade).toBeDefined();
  expect(data.Arcade).toBeInstanceOf(Arcade);
  expectTypeOf(data.Arcade).toEqualTypeOf<Arcade>();
  expect(data.ArenaBrawl).toBeDefined();
  expect(data.ArenaBrawl).toBeInstanceOf(ArenaBrawl);
  expectTypeOf(data.ArenaBrawl).toEqualTypeOf<ArenaBrawl>();
  expect(data.BedWars).toBeDefined();
  expect(data.BedWars).toBeInstanceOf(BedWars);
  expectTypeOf(data.BedWars).toEqualTypeOf<BedWars>();
  expect(data.BlitzSurvivalGames).toBeDefined();
  expect(data.BlitzSurvivalGames).toBeInstanceOf(BlitzSurvivalGames);
  expectTypeOf(data.BlitzSurvivalGames).toEqualTypeOf<BlitzSurvivalGames>();
  expect(data.BuildBattle).toBeDefined();
  expect(data.BuildBattle).toBeInstanceOf(BuildBattle);
  expectTypeOf(data.BuildBattle).toEqualTypeOf<BuildBattle>();
  expect(data.CopsAndCrims).toBeDefined();
  expect(data.CopsAndCrims).toBeInstanceOf(CopsAndCrims);
  expectTypeOf(data.CopsAndCrims).toEqualTypeOf<CopsAndCrims>();
  expect(data.Duels).toBeDefined();
  expect(data.Duels).toBeInstanceOf(Duels);
  expectTypeOf(data.Duels).toEqualTypeOf<Duels>();
  expect(data.MegaWalls).toBeDefined();
  expect(data.MegaWalls).toBeInstanceOf(MegaWalls);
  expectTypeOf(data.MegaWalls).toEqualTypeOf<MegaWalls>();
  expect(data.MurderMystery).toBeDefined();
  expect(data.MurderMystery).toBeInstanceOf(MurderMystery);
  expectTypeOf(data.MurderMystery).toEqualTypeOf<MurderMystery>();
  expect(data.Paintball).toBeDefined();
  expect(data.Paintball).toBeInstanceOf(Paintball);
  expectTypeOf(data.Paintball).toEqualTypeOf<Paintball>();
  expect(data.Pit).toBeDefined();
  expect(data.Pit).toBeInstanceOf(Pit);
  expectTypeOf(data.Pit).toEqualTypeOf<Pit>();
  expect(data.QuakeCraft).toBeDefined();
  expect(data.QuakeCraft).toBeInstanceOf(Quakecraft);
  expectTypeOf(data.QuakeCraft).toEqualTypeOf<Quakecraft>();
  expect(data.SkyWars).toBeDefined();
  expect(data.SkyWars).toBeInstanceOf(SkyWars);
  expectTypeOf(data.SkyWars).toEqualTypeOf<SkyWars>();
  expect(data.SmashHeroes).toBeDefined();
  expect(data.SmashHeroes).toBeInstanceOf(SmashHeroes);
  expectTypeOf(data.SmashHeroes).toEqualTypeOf<SmashHeroes>();
  expect(data.SpeedUHC).toBeDefined();
  expect(data.SpeedUHC).toBeInstanceOf(SpeedUHC);
  expectTypeOf(data.SpeedUHC).toEqualTypeOf<SpeedUHC>();
  expect(data.TNTGames).toBeDefined();
  expect(data.TNTGames).toBeInstanceOf(TNTGames);
  expectTypeOf(data.TNTGames).toEqualTypeOf<TNTGames>();
  expect(data.TurboKartRacers).toBeDefined();
  expect(data.TurboKartRacers).toBeInstanceOf(TurboKartRacers);
  expectTypeOf(data.TurboKartRacers).toEqualTypeOf<TurboKartRacers>();
  expect(data.UHC).toBeDefined();
  expect(data.UHC).toBeInstanceOf(UHC);
  expectTypeOf(data.UHC).toEqualTypeOf<UHC>();
  expect(data.VampireZ).toBeDefined();
  expect(data.VampireZ).toBeInstanceOf(VampireZ);
  expectTypeOf(data.VampireZ).toEqualTypeOf<VampireZ>();
  expect(data.Walls).toBeDefined();
  expect(data.Walls).toBeInstanceOf(Walls);
  expectTypeOf(data.Walls).toEqualTypeOf<Walls>();
  expect(data.Warlords).toBeDefined();
  expect(data.Warlords).toBeInstanceOf(Warlords);
  expectTypeOf(data.Warlords).toEqualTypeOf<Warlords>();
  expect(data.WoolGames).toBeDefined();
  expect(data.WoolGames).toBeInstanceOf(WoolGames);
  expectTypeOf(data.WoolGames).toEqualTypeOf<WoolGames>();
});

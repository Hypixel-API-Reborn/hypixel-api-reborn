import SkyBlockMember from './SkyBlockMember.js';
import { expect, expectTypeOf, test } from 'vitest';
import type SkyBlockMemberAccessoryBag from './AccessoryBag/SkyBlockMemberAccessoryBag.js';
import type SkyBlockMemberBestiary from './Bestiary/SkyBlockMemberBestiary.js';
import type SkyBlockMemberChocolateFactory from './ChocolateFactory/SkyBlockMemberChocolateFactory.js';
import type SkyBlockMemberCrimsonIsle from './CrimsonIsle/SkyBlockMemberCrimsonIsle.js';
import type SkyBlockMemberCurrencies from './SkyBlockMemberCurrencies.js';
import type SkyBlockMemberDungeons from './Dungeons/SkyBlockMemberDungeons.js';
import type SkyBlockMemberFairySouls from './SkyBlockMemberFairySouls.js';
import type SkyBlockMemberJacobContests from './JacobContests/SkyBlockMemberJacobContests.js';
import type SkyBlockMemberLeveling from './SkyBlockMemberLeveling.js';
import type SkyBlockMemberMining from './Mining/SkyBlockMemberMining.js';
import type SkyBlockMemberObjectives from './SkyBlockMemberObjectives.js';
import type SkyBlockMemberPets from './Pets/SkyBlockMemberPets.js';
import type SkyBlockMemberPlayerData from './PlayerData/SkyBlockMemberPlayerData.js';
import type SkyBlockMemberPlayerStats from './PlayerStats/SkyBlockMemberPlayerStats.js';
import type SkyBlockMemberProfile from './SkyBlockMemberProfile.js';
import type SkyBlockMemberQuests from './Quests/SkyBlockMemberQuests.js';
import type SkyBlockMemberRift from './Rift/SkyBlockMemberRift.js';
import type SkyBlockMemberSlayers from './Slayers/SkyBlockMemberSlayers.js';
import type { SkyBlockArrow } from '../../../Types/SkyBlock.js';
import type { UUID } from '../../../Types/Global.js';

test('SkyBlockMember', () => {
  const data = new SkyBlockMember('meow', { stats: 'meow' });
  expect(data).toBeDefined();
  expect(data).toBeInstanceOf(SkyBlockMember);
  expectTypeOf(data).toEqualTypeOf<SkyBlockMember>();
  expect(data.uuid).toBeDefined();
  expectTypeOf(data.uuid).toEqualTypeOf<UUID>();
  expect(data.accessoryBag).toBeDefined();
  expectTypeOf(data.accessoryBag).toEqualTypeOf<SkyBlockMemberAccessoryBag>();
  expect(data.bestiary).toBeDefined();
  expectTypeOf(data.bestiary).toEqualTypeOf<SkyBlockMemberBestiary>();
  expect(data.collections).toBeDefined();
  expectTypeOf(data.collections).toEqualTypeOf<Record<string, number>>();
  expect(data.currencies).toBeDefined();
  expectTypeOf(data.currencies).toEqualTypeOf<SkyBlockMemberCurrencies>();
  expect(data.dungeons).toBeDefined();
  expectTypeOf(data.dungeons).toEqualTypeOf<SkyBlockMemberDungeons>();
  expect(data.chocolateFactory).toBeDefined();
  expectTypeOf(data.chocolateFactory).toEqualTypeOf<SkyBlockMemberChocolateFactory>();
  expect(data.fairySouls).toBeDefined();
  expectTypeOf(data.fairySouls).toEqualTypeOf<SkyBlockMemberFairySouls>();
  expect(data.soulflow).toBeDefined();
  expectTypeOf(data.soulflow).toEqualTypeOf<number>();
  expect(data.favoriteArrow).toBeDefined();
  expectTypeOf(data.favoriteArrow).toEqualTypeOf<SkyBlockArrow>();
  expect(data.jacobContests).toBeDefined();
  expectTypeOf(data.jacobContests).toEqualTypeOf<SkyBlockMemberJacobContests>();
  expect(data.leveling).toBeDefined();
  expectTypeOf(data.leveling).toEqualTypeOf<SkyBlockMemberLeveling>();
  expect(data.mining).toBeDefined();
  expectTypeOf(data.mining).toEqualTypeOf<SkyBlockMemberMining>();
  expect(data.crimsonIsle).toBeDefined();
  expectTypeOf(data.crimsonIsle).toEqualTypeOf<SkyBlockMemberCrimsonIsle>();
  expect(data.objectives).toBeDefined();
  expectTypeOf(data.objectives).toEqualTypeOf<SkyBlockMemberObjectives>();
  expect(data.pets).toBeDefined();
  expectTypeOf(data.pets).toEqualTypeOf<SkyBlockMemberPets>();
  expect(data.playerData).toBeDefined();
  expectTypeOf(data.playerData).toEqualTypeOf<SkyBlockMemberPlayerData>();
  expect(data.playerStats).toBeDefined();
  expectTypeOf(data.playerStats).toEqualTypeOf<SkyBlockMemberPlayerStats>();
  expect(data.profileStats).toBeDefined();
  expectTypeOf(data.profileStats).toEqualTypeOf<SkyBlockMemberProfile>();
  expect(data.quests).toBeDefined();
  expectTypeOf(data.quests).toEqualTypeOf<SkyBlockMemberQuests>();
  expect(data.slayers).toBeDefined();
  expectTypeOf(data.slayers).toEqualTypeOf<SkyBlockMemberSlayers>();
  expect(data.rift).toBeDefined();
  expectTypeOf(data.rift).toEqualTypeOf<SkyBlockMemberRift>();
  expect(data.toString).toBeDefined();
  expectTypeOf(data.toString).toEqualTypeOf<() => UUID>();
  expect(data.toString()).toBeDefined();
  expect(data.toString()).toEqual(data.uuid);
  expectTypeOf(data.toString()).toEqualTypeOf<UUID>();
});

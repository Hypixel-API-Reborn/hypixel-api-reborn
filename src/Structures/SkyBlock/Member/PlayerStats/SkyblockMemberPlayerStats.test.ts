import SkyblockMemberPlayerStats from './SkyblockMemberPlayerStats.js';
import { expect, expectTypeOf, test } from 'vitest';
import type SkyblockMemberPlayerStatsAuctions from './SkyblockMemberPlayerStatsAuctions.js';
import type SkyblockMemberPlayerStatsCandy from './SkyblockMemberPlayerStatsCandy.js';
import type SkyblockMemberPlayerStatsEndIsland from './SkyblockMemberPlayerStatsEndIsland.js';
import type SkyblockMemberPlayerStatsFishing from './SkyblockMemberPlayerStatsFishing.js';
import type SkyblockMemberPlayerStatsGifts from './SkyblockMemberPlayerStatsGifts.js';
import type SkyblockMemberPlayerStatsMythos from './SkyblockMemberPlayerStatsMythos.js';
import type SkyblockMemberPlayerStatsWinter from './SkyblockMemberPlayerStatsWinter.js';

test('SkyblockMemberPlayerStats', () => {
  const data = new SkyblockMemberPlayerStats({ stats: 'meow' });
  expect(data).toBeDefined();
  expect(data).toBeInstanceOf(SkyblockMemberPlayerStats);
  expectTypeOf(data).toEqualTypeOf<SkyblockMemberPlayerStats>();
  expect(data.fishing).toBeDefined();
  expectTypeOf(data.fishing).toEqualTypeOf<SkyblockMemberPlayerStatsFishing>();
  expect(data.glowingMushroomsBroken).toBeDefined();
  expectTypeOf(data.glowingMushroomsBroken).toEqualTypeOf<number>();
  expect(data.highestDamage).toBeDefined();
  expectTypeOf(data.highestDamage).toEqualTypeOf<number>();
  expect(data.highestCriticalDamage).toBeDefined();
  expectTypeOf(data.highestCriticalDamage).toEqualTypeOf<number>();
  expect(data.kills).toBeDefined();
  expectTypeOf(data.kills).toEqualTypeOf<Record<string, number>>();
  expect(data.deaths).toBeDefined();
  expectTypeOf(data.deaths).toEqualTypeOf<Record<string, number>>();
  expect(data.auctions).toBeDefined();
  expectTypeOf(data.auctions).toEqualTypeOf<SkyblockMemberPlayerStatsAuctions>();
  expect(data.candy).toBeDefined();
  expectTypeOf(data.candy).toEqualTypeOf<SkyblockMemberPlayerStatsCandy>();
  expect(data.gifts).toBeDefined();
  expectTypeOf(data.gifts).toEqualTypeOf<SkyblockMemberPlayerStatsGifts>();
  expect(data.mythos).toBeDefined();
  expectTypeOf(data.mythos).toEqualTypeOf<SkyblockMemberPlayerStatsMythos>();
  expect(data.winter).toBeDefined();
  expectTypeOf(data.winter).toEqualTypeOf<SkyblockMemberPlayerStatsWinter>();
  expect(data.endIsland).toBeDefined();
  expectTypeOf(data.endIsland).toEqualTypeOf<SkyblockMemberPlayerStatsEndIsland>();
  expect(data.races).toBeDefined();
  expectTypeOf(data.races).toEqualTypeOf<Record<string, number | Record<string, number>>>();
});
